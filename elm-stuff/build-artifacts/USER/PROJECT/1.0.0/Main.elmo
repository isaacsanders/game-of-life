Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Input = Elm.Input.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Render = Elm.Render.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $State = Elm.State.make(_elm),
   $Update = Elm.Update.make(_elm);
   var main = function () {
      var grid = _L.fromArray([_L.fromArray([0
                                            ,0
                                            ,0
                                            ,1])
                              ,_L.fromArray([0,0,1,0])
                              ,_L.fromArray([0,0,1,1])
                              ,_L.fromArray([0,1,0,0])]);
      var size = {ctor: "_Tuple2"
                 ,_0: 4
                 ,_1: 4};
      var state = $State.GameOfLife({_: {}
                                    ,grid: grid
                                    ,size: size});
      return A2($Signal.map,
      $Render.render,
      A3($Signal.foldp,
      $Update.update,
      state,
      $Input.inputs));
   }();
   _elm.Main.values = {_op: _op
                      ,main: main};
   return _elm.Main.values;
};